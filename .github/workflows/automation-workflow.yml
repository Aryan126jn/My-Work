name: Deploy Fortune Cookie App using ECS

on:
  push:
    branches:
      - Folder-1         # Change to your branch
    paths:
      - 'app/**'         # Folder containing Dockerfile

env:
  AWS_REGION: us-east-1
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS CLI
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3️⃣ Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}

      # 4️⃣ Build and tag Docker image
      - name: Build Docker image
        run: |
          SHORT_TAG=${IMAGE_TAG::7}
          docker build -t fortune-cookie:latest ./app
          docker tag fortune-cookie:latest ${{ secrets.ECR_REPO_URI }}:$SHORT_TAG
          docker tag fortune-cookie:latest ${{ secrets.ECR_REPO_URI }}:latest

      # 5️⃣ Push Docker image to ECR
      - name: Push Docker image
        run: |
          SHORT_TAG=${IMAGE_TAG::7}
          docker push ${{ secrets.ECR_REPO_URI }}:$SHORT_TAG
          docker push ${{ secrets.ECR_REPO_URI }}:latest

      # 6️⃣ Update ECS service
      - name: Update ECS Service
        run: |
          SHORT_TAG=${IMAGE_TAG::7}

          # Fetch current task definition
          TASK_DEF_JSON=$(aws ecs describe-task-definition --task-definition fortune-task)

          # Create new revision with updated image
          NEW_TASK_DEF=$(echo $TASK_DEF_JSON | jq --arg IMG "${{ secrets.ECR_REPO_URI }}:$SHORT_TAG" \
            '.taskDefinition 
            | { 
                family: .family,
                networkMode: .networkMode,
                requiresCompatibilities: .requiresCompatibilities,
                cpu: .cpu,
                memory: .memory,
                executionRoleArn: .executionRoleArn,
                taskRoleArn: .taskRoleArn,
                runtimePlatform: .runtimePlatform,
                containerDefinitions: (.containerDefinitions | map(.image = $IMG))
              }')

          echo "$NEW_TASK_DEF" > new-task-def.json

          # Register new revision
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

          # Get the latest revision ARN
          LATEST_TASK_DEF=$(aws ecs list-task-definitions \
            --family-prefix fortune-task --sort DESC \
            --query "taskDefinitionArns[0]" --output text)

          # Update ECS service
          aws ecs update-service \
            --cluster fortune-cluster \
            --service fortune-service \
            --task-definition $LATEST_TASK_DEF \
            --force-new-deployment
