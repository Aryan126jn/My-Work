name: Deploy Fortune Cookie App

on:
  push:
    branches:
      - Folder-1         # Change to your branch
    paths:
      - 'app/**'         # Folder containing Dockerfile

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS CLI
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # your region

      # 3️⃣ Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}

      # 4️⃣ Build and tag Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG="${GITHUB_SHA::7}"
          docker build -t fortune-cookie:latest ./app
          docker tag fortune-cookie:latest ${{ secrets.ECR_REPO_URI }}:${IMAGE_TAG}

      # 5️⃣ Push Docker image to ECR
      - name: Push Docker image
        run: |
          IMAGE_TAG="${GITHUB_SHA::7}"
          docker push ${{ secrets.ECR_REPO_URI }}:${IMAGE_TAG}

      # 6️⃣ Update ECS service (EC2-backed)
      - name: Update ECS Service
        run: |
          IMAGE_TAG="${GITHUB_SHA::7}"
          # Register a new task definition revision with updated image
          TASK_DEF_JSON=$(aws ecs describe-task-definition --task-definition fortune-task)
          NEW_TASK_DEF=$(echo $TASK_DEF_JSON | jq --arg IMG "${{ secrets.ECR_REPO_URI }}:${IMAGE_TAG}" \
            '.taskDefinition | .containerDefinitions[0].image=$IMG | {family: .family, containerDefinitions: .containerDefinitions, networkMode: .networkMode, requiresCompatibilities: ["EC2"], cpu: .cpu, memory: .memory}') 
          
          echo "$NEW_TASK_DEF" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

          # Get the latest revision
          LATEST_TASK_DEF=$(aws ecs list-task-definitions --family-prefix fortune-task --sort DESC --query "taskDefinitionArns[0]" --output text)

          # Update ECS service to use new task definition
          aws ecs update-service \
            --cluster fortune-cluster \
            --service fortune-service \
            --task-definition $LATEST_TASK_DEF \
            --force-new-deployment
